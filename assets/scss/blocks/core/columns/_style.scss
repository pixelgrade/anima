$enable-columns-block-styles: true !default;

@if $enable-columns-block-styles == true {

    /* Columns Blocks */
    .wp-block-columns {
        display: flex;
        flex-wrap: wrap;

        @media (min-width: 782px) {
            flex-wrap: nowrap
        }

        // spacing for first level of rows
        &:not(:first-child),
        & + * {
            --element-spacing: var(--theme-spacing-fluid-large);
        }

        // spacing for deeper levels of rows
        & &:not(:first-child),
        & & + * {
            --element-spacing: var(--theme-spacing-fluid-normal);
        }

        .block-editor-inner-blocks {
            width: 100%;
        }
    }

    .wp-block-column {
        margin-bottom: 1em;
        flex-grow: 1;
        min-width: 0;
        word-break: break-word;
        overflow-wrap: break-word;
        @include space-children-y( var(--theme-spacing-fluid) );


        @media not screen and (min-width: 600px) {
            flex-basis: 100% !important;
        }

        @media only screen and (min-width: 600px) {
            flex-basis: calc(50% - var(--element-spacing));
            flex-grow: 0;

            &:nth-child(2n) {
                margin-left: var(--element-spacing);
            }
        }

        @media (min-width: 782px) {
            &:not(:first-child) {
                margin-left: var(--element-spacing);
            }
        }
    }


    .wp-block-columns {

        &.are-vertically-aligned-top {
            align-items: flex-start
        }

        &.are-vertically-aligned-center {
            align-items: center
        }

        &.are-vertically-aligned-bottom {
            align-items: flex-end
        }
    }

    .wp-block-column {

        &.is-vertically-aligned-top {
            align-self: flex-start
        }

        &.is-vertically-aligned-center {
            align-self: center
        }

        &.is-vertically-aligned-bottom {
            align-self: flex-end
        }
    }
}

// CSS rules needs to be very specific to overwrite any WooCommerce default styling
// @todo find a more reliable and specific selector

:is(body, #very.specific) {

  :is(
    button:not([class]),
    input[type="submit"]:not(.ot-button):not(.search-submit),
    .button:not(.trix-button),
    button.button:disabled[disabled]
  ) {
    @include button;
  }

  // Overwrite the text color of the default WooCommerce button :hover state
  #respond input#submit.alt:hover,
  :is(a, button, input).button.alt:hover {
    color: var(--theme-button-hover-text-color);
  }

  :is(a, button).button {
    @include apply-font-properties;

    &:not(:is(.alt, .checkout, .specificity.increase)) {
      @include button-fill-reverse;
    }

    &:is(.alt, .checkout, .specificity.increase) {
      @include button-fill;
    }

    &.checkout-button {
      @include button-huge;
    }
  }

  input.button,
  input[type="submit"]:not(.ot-button):not(.search-submit) {

    &:not(.alt) {
      @include button-fill-reverse(false);
    }

    &.alt {
      @include button-fill(false);
    }
  }

  :is(.checkout-button, #place_order) {
    @include button-huge;
    --theme-button-text-color: var(--theme-light-primary);
    --theme-button-background-color: var(--sm-current-accent-color);
    --theme-button-border-color: var(--sm-current-accent-color);
    --theme-button-hover-text-color: var(--sm-current-accent-color);
    --theme-button-hover-border-color: var(--sm-current-accent-color);
  }

  #place_order {
    --theme-button-background-color: var(--sm-current-accent-color);
    --theme-button-border-color: var(--sm-current-accent-color);
    --theme-button-hover-text-color: var(--sm-current-accent-color);
    --theme-button-hover-border-color: var(--sm-current-accent-color);

    @include button-huge;
  }

  :is(.add_to_cart_button, .single_add_to_cart_button) {
    --theme-button-background-color: var(--sm-current-accent-color);
    --theme-button-border-color: var(--sm-current-accent-color);
    --theme-button-hover-text-color: var(--sm-current-accent-color);
    --theme-button-hover-border-color: var(--sm-current-accent-color);

    width: 100%;
  }

  .woocommerce-notices-wrapper {

    .button {
      @include specific(5) {
        @include button-fill;
        --current-button-text-color: var(--theme-button-text-color);

        &:hover {
          --current-button-text-color: var(--theme-button-hover-text-color);
        }
      }
    }
  }
}

html body.woocommerce-page {

    .customize-partial-edit-shortcut-button {
        padding: 3px;
        border: 0;
        border-radius: 50%;
    }

    .ajax_add_to_cart ~ .button {
        display: none;
    }

     @include above(tablet) {
        button[name='update_cart'] {
            float: right;
        }
    }

    textarea {
        @include textarea;
    }
}

// Some elements doesn't need to be targeted overly specific
// ---
// Quantity controls appears on the following pages: single product, cart

.quantity {
    .qty_button {
        border-radius: 50%;
        color: var(--sm-current-fg1-color);

        &:after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;

            width: 100%;
            height: 100%;

            background-color: currentColor;
        }


        &.minus {
            &:after {
                mask-size: contain;
                mask: url($icon-minus-path) no-repeat 50% 50%;
                -webkit-mask:url($icon-minus-path) no-repeat 50% 50%;
            }
        }

        &.plus {
           &:after {
               mask-size: contain;
               mask: url($icon-plus-path) no-repeat 50% 50%;
               -webkit-mask:url($icon-plus-path) no-repeat 50% 50%;
           }
        }
    }
}

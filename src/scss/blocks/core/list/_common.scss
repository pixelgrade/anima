// List default settings
// --separator-weight: border weight used for Divider or Timeline.
// Usually used on border or box-shadow, depending on the situation.
// This will also help us to position correctly the
// :before element on <li> (usually bullet, or checkmark).
// --icon-width and --icon-height: width and height of the checkmarks.
// This will also help us to position correctly
// checkmark background, or timeline border.
ul,
ol {
	--separator-weight: 0.222em;
	--divider-weight: 0.222em;
	--icon-width: 0.333em;
	--icon-height: 0.333em;
	
	--bullet-width: calc(var(--final-font-size) * var(--current-line-height));
	--bullet-height: var(--bullet-width);
	--bullet-bg-color: var(--sm-current-bg-color);
	--bullet-color: var(--sm-current-fg1-color);
	
	background-color: transparent;
	color: inherit;
	
	&.sm-color-signal-1 {
		--bullet-color: var(--sm-current-accent-color);
	}
	
	&.sm-color-signal-2 {
		--bullet-color: var(--sm-current-bg-color);
		--bullet-bg-color: var(--sm-current-fg1-color);
	}
	
	&.sm-color-signal-3 {
		--bullet-color: var(--sm-current-bg-color);
		--bullet-bg-color: var(--sm-current-accent-color);
	}
}

// Users can select between two options
// for list: ordered and unordered.
// For ordered list, his intention is clear,
// he wants an ordered list, with numbers.
// For this selection, user can control
// List Items Connection: None, Divider or Timeline.
// For unordered lists, his intention is not really clear,
// We know that he wants a list, but we are not sure
// that he wants bullets, icon, or maybe nothing,
// just a simple list.
// Fot this selection, user can control
// Marker Settings: None, Bullet or Checkmark.
// List Items Connection: None, Divider or Timeline.
//
// To avoid any leaks, Marker Settings related classes
// are used only for <ul>.
.is-style-divider,
[data-novablocks-connection-style="is-style-divider"] {
	
	li {
		--element-spacing: var(--theme-spacing-fluid-default);
		
		&:not(:last-child) {
			border-bottom: var(--divider-weight) solid var(--sm-bg-color-2);
			padding-bottom: var(--element-spacing);
		}
		
		ul,
		ol {
			
			li {
				border-bottom: 0;
				padding-bottom: 0;
			}
		}
	}
	
}

// This will be applied only on uls
// with bullet style.
.is-style-timeline,
[data-novablocks-connection-style="is-style-timeline"] {
	
	position: relative;
	
	// We want to overwrite
	// default list styling, by using :before.
	
	list-style-type: none;
	
	&:not(.list-checkmark-style),
	&:not([data-novablocks-list-style="list-checkmark-style"]) {
		
		li:not(:last-child) {
			
			// Add a left border on every list element,
			// except the last child.
			&:after {
				content: '';
				position: absolute;
				width: var(--divider-weight);
				height: calc( 100% + var(--theme-spacing-fluid-default) );
				left: calc(-1 * var(--list-padding) + var(--icon-width) * 0.5 - var(--divider-weight) * 0.5);
				top: 0.55em;
				background-color: var(--sm-bg-color-2);
			}
			
			ul,
			ol {
				
				li:after {
					content: none;
				}
			}
		}
	}
}

ul {
	
	list-style: none;
	
	li {
		
		position: relative;
		
		&:before {
			
			position: absolute;
			
			content: '';
			top: calc((var(--final-font-size) * var(--current-line-height) - var(--icon-height)) * 0.5);
			
			left: calc(-1 * var( --list-padding));
			
			background-color: var(--bullet-color);
			width: var( --icon-width);
			height: var( --icon-height);
			border-radius: 50%;
			box-shadow: 0 0 0 0.22em var(--bullet-bg-color), 0 0 0 0.4em var(--page-background-color, var(--sm-current-bg-color));
			z-index: 10;
		}
	}
	
	&.list-no-marker,
	&[data-novablocks-list-style="list-no-marker"]{
		
		padding-left: 0;
		list-style: none;
		
		li {
			
			&:before {
				content: none;
			}
		}
		
		&.is-style-timeline[class],
		&[data-novablocks-connection-style="is-style-timeline"][class]{
			
			padding-left: var(--list-padding);
			box-shadow: inset var(--divider-weight) 0 0 var(--sm-bg-color-2);
			
			li {
				
				&:after {
					content: none;
				}
			}
		}
	}
	
	&.list-checkmark-style,
	&[data-novablocks-list-style="list-checkmark-style"] {
		
		&.is-style-timeline[class],
		&[data-novablocks-connection-style="is-style-timeline"][class] {
			
			--border-width: 0.11em;
			
			&:before {
				
				content: '';
				position: absolute;
				left: calc(var(--bullet-width) * 0.5);
				transform: translateX(-50%);
				width: var(--separator-weight);
				height: 100%;
				background-color: var(--sm-bg-color-2);
			}
		}
	}
	
	&.list-checkmark-style[class][class],
	&[data-novablocks-list-style="list-checkmark-style"][class][class] {
		
		&,
		ul {
			--list-padding: calc(var(--theme-spacing-fluid-small) * 1.2);
			--icons-background-width: calc(var(--list-padding) - 0.45em);
			--icons-background-height:  calc(var(--list-padding) - 0.45em);
		}
		
		li {
			
			&:before {
				content: "";
				display: block;
				position: absolute;
				--pull-value: calc(var(--bullet-width) * 0.25);
				top: calc(var(--bullet-height) * 0.5);
				left: calc(-1 * var( --list-padding) + var(--bullet-width) * 0.5);
				transform: translate(-50%, -50%);
				width: calc(var( --bullet-width) * 0.5);
				height: calc(var( --bullet-height) * 0.5);
				
				mask: url($checkbox-svg-path) no-repeat 50% 50%;
				mask-size: contain;
				mask-position: center;
				-webkit-mask: url($checkbox-svg-path) no-repeat 50% 50%;
				-webkit-mask-size: contain;
				-webkit-mask-position: center;
				
				background-color: var(--bullet-color);
			}
			
			&:after {
				content: '';
				position: absolute;
				left: calc(-1 * var(--list-padding));
				top: calc((var(--final-font-size) * var(--current-line-height) - var(--bullet-height)) * 0.5);
				width: var(--bullet-width);
				height: var(--bullet-height);
				background-color: var(--bullet-bg-color);
				border-radius: 50%;
				box-shadow: 0 0 0 4px var(--current-light-primary);
			}
		}
	}
	
}

ol {
	
	position: relative;
	
	list-style-type: none;
	counter-reset: li;
	
	font-variant-numeric: slashed-zero;
	
	--list-stype: decimal-leading-zero;
	--bullet-width: calc(var(--final-font-size) * var(--current-line-height));
	--bullet-height: var(--bullet-width);
	--bullet-spacing: 0.4em;
	
	&.sm-color-signal-2,
	&.sm-color-signal-3 {
		--list-stype: decimal;
	}
	
	li {
		
		position: relative;
		
		&:before {
			position: absolute;
			left: calc( -1 * var( --list-padding) );
			
			width: var(--bullet-width);
			height: var(--bullet-height);
			
			counter-increment: li;
			content: counter(li, var(--list-stype));
			
			text-align: center;
			
			color: var(--bullet-color);
			background-color: var(--bullet-bg-color);
			
			border-radius: 50%;
			
			z-index: 10;
		}
		
		&:not(:last-child) {
			
			&:before {
				left: calc( -1 * var(--list-padding) );
			}
		}
	}
	
	&.is-style-timeline,
	&[data-novablocks-connection-style="is-style-timeline"] {
		
		&:before {
			content: '';
			position: absolute;
			left: calc( var(--bullet-width) * 0.5 - 0.1em );
			width: var(--divider-weight);
			height: calc(100% + var(--theme-spacing-fluid-default));
			background-color: var(--sm-bg-color-2);
		}
		
		> li {
			
			&:after {
				left: calc(-1 * var( --list-padding) * 0.5);
				content: none !important;
			}
			
			&:last-child {
				margin-left: calc(var(--list-padding) * -0.5 + var(--divider-weight));
				padding-left: calc(var(--list-padding) * 0.5);
				box-shadow: calc(var(--divider-weight) * -1.5) 0 0px 0 var(--current-light-primary);
				
				&:before {
					left: calc( var( --list-padding) * -0.5 - var(--divider-weight)) !important;
				}
			}
			
		}
	}
	
}

// Divider is created using a border
// and because of that is limited by text width.
// We want divider width to be given by list width, so we are
// to make some adjustments for cases where
// :before and :after elements are applied on lists.

.list-checkmark-style.is-style-divider,
ul.is-style-divider:not(.list-no-marker) {
	
	padding-left: 0;
	
	&[class][class][class] {
		
		li {
			padding-left: var(--list-padding);
			
			&:before {
				left: var(--pull-value, 0);
			}
			
			&:after {
				left: 0;
			}
		}
	}
}

ol.is-style-timeline {
	
	> li {
		
		&:last-child {
			
			&:after {
				content: '' !important;
				position: absolute;
				width: var(--separator-weight);
				height: calc( 100% + var(--theme-spacing-fluid-default));
				left: calc(-1 * var(--separator-weight) * 1.5);
				top: 0.55em;
				background-color: var(--sm-current-bg-color);
			}
		}
	}
}

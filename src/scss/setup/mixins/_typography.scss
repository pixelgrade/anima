@mixin apply-font-properties {
    font-size: var(--final-font-size);
    font-weight: var(--current-font-weight);
    font-family: var(--current-font-family);
    line-height: var(--current-line-height);
    letter-spacing: var(--current-letter-spacing);
    text-transform: var(--current-text-transform);
    font-feature-settings: var(--current-font-feature-settings);
}

@mixin typography-root {

    &, * {
        // x0 - viewport width at which font sizes should reach minimum value
        // y0 - minimum font size
        // x1 - viewport width at which we know the value for the font size
        // y1 - known font size
        --x0: var(--theme-font-size-minimum-value-breakpoint);
        --y0: var(--theme-font-size-minimum-value);
        --x1: var(--theme-font-size-breakpoint);
        --font-size-modifier: 1;

        // solving a first degree equation: y = ax + b
        --y1: var(--font-size);
        --y0-new: calc( var(--y1) - ( var(--y1) - var(--y0) ) * var(--theme-font-size-slope-adjust) );

        // calculate the slope and the remainder for the equation
        --a: calc( ( var(--y1) - var(--y0-new) ) / ( var(--x1) - var(--x0) ) );
        --b: calc( var(--y0-new) - var(--a) * var(--x0) );

        // x2 - viewport width at a given time
        // y2 - font size value we need to find out
        --y2: calc( var(--a) * 100vw + var(--b) * 1px );

        --final-font-size: calc( var(--font-size-modifier) * ( var(--y2) + var(--theme-addon) ) );

        @include apply-font-properties;
    }
}
